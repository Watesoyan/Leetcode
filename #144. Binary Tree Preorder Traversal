class Solution:
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        result = []
        stack = []
        p = root
        flag = 0
        
        while True:
            while flag is 0:
                if p is None:
                    flag = 1
                    break
                
                L = p.left is None
                R = p.right is None
                
                if L and R:
                    result.append(p.val)
                    flag = 1
                    break
                
                result.append(p.val)
                
                if L:
                    p = p.right 
                elif R:
                    p = p.left
                else:
                    stack.append(p.right)
                    p = p.left
                    
            while flag is 1:
                if len(stack) is 0:
                    return result
                p = stack.pop()
                flag = 0
