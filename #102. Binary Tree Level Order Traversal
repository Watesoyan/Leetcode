class Solution:
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if root is None:
            return []
        
        from collections import deque
        
        result = []
        tmproots = [root]
        nextroots = []
        tmpvals = []
        
        while True:
            tmproot = tmproots.pop()
            tmpvals.append(tmproot.val)
            
            if tmproot.left is not None:
                nextroots.append(tmproot.left)
            
            if tmproot.right is not None:
                nextroots.append(tmproot.right)
             
            if len(tmproots) == 0:
                result.append(tmpvals)
                tmpvals = []
                if len(nextroots) != 0: 
                    nextroots.reverse()
                    tmproots = nextroots
                    nextroots = []
                else:
                    break
            
        return result
